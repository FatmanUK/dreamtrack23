---
- name: 'Check directories exist'
  loop:
    - '{{ repository_root }}'
    - '{{ xbps_static_cache_path }}'
    - '{{ xbps_static_data_path }}/{{ xbps_static_repodir }}'
  file:
    path: '{{ item }}'
    state: 'directory'

- name: 'Unpack static xbps'
  unarchive:
    src: '../annex/{{ xbps_static_package }}'
    dest: '{{ repository_root }}'

- name: 'Download packages'
  register: 'xbps_prepare_download'
  when: 'download_enabled'
  until: 'xbps_prepare_download is not failed'  # poor workaround, but why does this fail? standard wisdom is "flaky network", but I don't buy that for a second
  retries: 300
  xbps_uncommon:
    binary_path: '{{ xbps_static_binary_path }}'
    arch: '{{ xbps_static_arch }}'
    packages: '{{ xbps_package_download }}'
    download_only: yes
    remote_repository:
      - '{{ xbps_static_repository }}'
    root_dir: '{{ repository_root }}'

- name: 'Delete repository indexes'
  vars:
    repodata_dir: '{{ xbps_static_data_path }}/{{ xbps_static_repodir }}'
  loop:
    - '{{ repodata_dir }}/{{ xbps_static_arch }}-repodata'
    - '{{ xbps_static_cache_path }}/{{ xbps_static_arch }}-repodata'
  file:
    state: 'absent'
    path: '{{ item }}'

# there isn't a loop replacement for with_fileglob --- see docs
# we need to delete the old sigs to create a new repo
- name: 'Delete old signatures'
  with_fileglob: '{{ xbps_static_cache_path }}/*.sig'
  file:
    state: 'absent'
    path: '{{ item }}'

- name: 'Copy in custom packages'
  loop: '{{ xbps_static_custom_packages }}'
  copy:
    src: '../../custom-packages/{{ item }}.{{ xbps_static_arch }}.xbps'
    dest: '{{ xbps_static_cache_path }}/{{ item }}.{{ xbps_static_arch }}.xbps'
    mode: '0644'

- name: 'Enumerate downloaded packages'
  with_fileglob: '{{ xbps_static_cache_path }}/*.xbps'
  set_fact:
    downloads: '{{ (downloads | default([])) + [item] }}'

- name: 'Build a new package index'
  register: 'rindex'
  when: 'downloads is defined'
  vars:
    e_read_metadata: 'index: failed to read props.plist metadata'
  failed_when:
    - 'e_read_metadata in rindex.stderr'
  xbps_uncommon:
    binary_path: '{{ xbps_static_binary_path }}'
    arch: '{{ xbps_static_arch }}'
    packages: '{{ downloads }}'
    create_new_index: yes
    #root_dir: '{{ repository_root }}'
    cache_path: '{{ xbps_static_cache_path }}'
    signed_by: '{{ xbps_static_byline }}'
    privkey: '{{ xbps_static_pem_path }}/{{ xbps_static_pem_key }}'

# TODO: improve this interface
- name: 'Check hex key'
  when: 'downloads is defined'
  register: 'hexkey'
  xbps_uncommon:
    binary_path: '{{ xbps_static_binary_path }}'
    cache_path: '{{ xbps_static_cache_path }}'
    list_repos: yes

# need to erase keys in key dir? var/db/xbps/keys --- they don't seem
# to be ones I've generated? (byline: Void Linux)

- name: 'Show hex key'
  when: 'hexkey.stdout is defined'
  debug:
    var: 'hexkey.stdout'
...
# vim: set filetype=yaml
