---
- name: 'Create per-host dhcpcd configs'
  connection: 'local'
  loop: '{{ virts_make_dhcpcd_configs }}'
  template:
    src: '{{ item[1:] }}.j2'
    dest: '/tmp/{{ inventory_hostname }}-{{ item | basename }}'
    mode: '0600'

- name: 'Create virt overlay image'
  connection: 'local'
  qcow2:
    follow_symlinks: yes
    base_disk: '../annex/{{ virts_base_image }}'
    new_disk: '/tmp/{{ inventory_hostname }}.qcow2'

- name: 'Write out guestfish scripts'
  connection: 'local'
  vars:
    disk: '/tmp/{{ inventory_hostname }}.qcow2'
    ansible_uid: '1999' # TODO: erm... get from base image?
    ansible_gid: '1999'
  template:
    src: 'guestfish.j2'
    dest: '/tmp/{{ inventory_hostname }}-guestfish.txt'

- name: 'Inject SSH and network settings'
  connection: 'local'
  guestfish:
    script: '/tmp/{{ inventory_hostname }}-guestfish.txt'

- name: 'Copy prepared image'
  delegate_to: '{{ hostvars[inventory_hostname].hypervisor_host }}'
  become: yes
  copy:
    src: '/tmp/{{ inventory_hostname }}.qcow2'
    dest: '{{ virts_image_dest }}/{{ inventory_hostname }}.qcow2'
    owner: '{{ virts_user }}'
    group: '{{ virts_user }}'
    mode: '0664' # needs g+w to work

- name: 'Assemble machine.xml.j2'
  connection: 'local'
  assemble:
    src: '../roles/cluster_create/files/fragments'
    dest: '/tmp/machine.xml.j2'

- name: 'Template out machine definition'
  delegate_to: '{{ hypervisor_host }}'
  template:
    src: '/tmp/machine.xml.j2'
    dest: '/tmp/{{ inventory_hostname }}.xml'
    mode: '0444'
    validate: '/usr/bin/virt-xml-validate %s'

- name: 'Define remote virts'
  register: 'rg_define_virts'
  delegate_to: '{{ hypervisor_host }}'
  vars:
    e_already: 'already exists with uuid'
    virts_xml: '/tmp/{{ inventory_hostname }}.xml'
  changed_when:
    - 'rg_define_virts.rc == 0'
  failed_when:
    - 'rg_define_virts.rc != 0'
    - 'e_already not in rg_define_virts.stderr'
  virsh_uncommon:
    mode: 'xml_define'
    file: '{{ virts_xml }}'

- name: 'Mark host autostarted (not on dev)'
  delegate_to: '{{ hypervisor_host }}'
  virsh_uncommon:
    mode: 'autostart'
    disabled: '{{ env == "dev" }}'
    domain: '{{ fqdn }}'

- name: 'Remove temporary machine definitions'
  when: 'env == "dev"'
  delegate_to: '{{ hypervisor_host }}'
  file:
    state: 'absent'
    path: '/tmp/{{ inventory_hostname }}.xml'

- name: 'Remove temporary dhcpcd files'
  when: 'env == "dev"'
  delegate_to: '{{ hypervisor_host }}'
  loop: '{{ virts_make_dhcpcd_configs }}'
  file:
    state: 'absent'
    path: '/tmp/{{ inventory_hostname }}-{{ item | basename }}'
...
# vim: set filetype=yaml
